<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACo
        CAAAAk1TRnQBSQFMAgEBAgEAARABAAEQAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEEYAAVwBSgEPAf8DFgEeFAADMgFQAVwBSgEPAf8BWQFTAUUBstwAAVwBSgEP
        Af8DEQEXBAADEQEXAVwBSgEPAf8BWgFUAUMBvQFaAUoBEwH9AVwBSgEPAf8BXAFKAQ8B/wE/AT4BPQFr
        AVwBSgEPAf8COAE3AVygAAMhATABXAFKAQ8B/wQAAV4BTAERAf4BXAFKAQ8B/wFcAUoBDwH/BAABXAFK
        AQ8B/wFcAUoBDwH/AVwBSgEPAf8BXAFKAQ8B/wFcAUoBDwH/AVwBSgEPAf8BXAFKAQ8B/wQAAyUBNwFc
        AUoBDwH/AVwBSgEPAf8BXAFKAQ8B/wFcAUoBDwH/AVwBSgEPAf8BXAFKAQ8B/wFcAUoBDwH/AVABTQFG
        AZagAAFXAVIBRQGuAVwBSgEPAf8EAAFcAUoBDwH/AVwBSgEPAf8BXAFKAQ8B/xgAAVwBSgEPAf8DHwEs
        CAABXAFKAQ8B/wFcAUoBDwH/AVwBSgEPAf8DJQE3AV4BUAEbAfQBXAFKAQ8B/wFcAUoBDwH/pAABVwFS
        AUUBrgFcAUoBDwH/BAABXAFKAQ8B/wFcAUoBDwH/AVwBSgEPAf8BXAFKAQ8B/wFcAUoBDwH/AVwBSgEP
        Af8BXAFKAQ8B/wQAAVwBSgEPAf8DHAEnBAABXgFMARUB+wFcAUoBDwH/AVwBSgEPAf8BXAFKAQ8B/wwA
        AVwBSgEPAf8BXAFKAQ8B/wFcAUoBDwH/AVwBSgEPAf+cAAFXAVIBRQGuAVwBSgEPAf8EAAFcAUoBDwH/
        AVwBSgEPAf8BXAFKAQ8B/wFcAUoBDwH/AVwBSgEPAf8BXAFKAQ8B/wFcAUoBDwH/EAABXAFKAQ8B/wFc
        AUoBDwH/AVwBSgEPAf8BXAFKAQ8B/wwAAVwBSgEPAf8BXAFKAQ8B/wFcAUoBDwH/AVwBSgEPAf+cAAFX
        AVIBRQGuAVwBSgEPAf8EAAFcAUoBDwH/AVwBSgEPAf8BXAFKAQ8B/wFcAUoBDwH/AVwBSgEPAf8BXAFK
        AQ8B/wFcAUoBDwH/AVwBSgEPAf8BXAFKAQ8B/xAAAVwBSgEPAf8BXAFKAQ8B/wFeAUoBGQH5AwMBBAFe
        AVUBNQHYAVwBSgEPAf8BXAFKAQ8B/6QAAVcBUgFFAa4BXAFKAQ8B/wQAAVwBSgEPAf8BXAFKAQ8B/wMW
        AR4EAAMZASMBXAFKAQ8B/wgAAVwBSgEPAf8MAAMKAQ4BXAFKAQ8B/wFcAUoBDwH/AVwBSgEPAf8BXAFK
        AQ8B/wFcAUoBDwH/AVwBSgEPAf8BXAFKAQ8B/wI0ATMBUwMRARcDBAEFBAACMQEwAU2QAAFXAVIBRQGu
        AVwBSgEPAf8EAAFcAUoBDwH/AVwBSgEPAf8BXAFKAQ8B/wQAAVwBSgEPAf8BXAFKAQ8B/wFcAUoBDwH/
        AVwBSgEPAf8BXAFKAQ8B/wwAAx4BKwFcAUoBDwH/AVwBUwEtAeQBXAFKAQ8B/wFcAUoBDwH/AVwBSgEP
        Af8BUwFRAUcBoAFcAUoBDwH/AUgBRwFDAYEBXAFKAQ8B/wFcAUoBDwH/AV4BTAEeAfMBXAFKAQ8B/wMA
        AQGMAAFXAVIBRQGuAVwBSgEPAf8EAAFcAUoBDwH/AVwBSgEPAf8DEwEaBAADHQEpAVwBSgEPAf8DDQER
        AxIBGQFcAUoBDwH/GAACNwE2AVoBXAFKAQ8B/wFYAVMBQgG8BAABXQFUAT4BygFUAVABRgGkAVwBSgEP
        Af8BXAFKAQ8B/wFcAUoBDwH/AVwBSgEPAf8BSgFJAUQBhwFcAU4BGQH4iAABVwFSAUUBrgFcAUoBDwH/
        BAABXAFKAQ8B/wFcAUoBDwH/AxoBJAQAAyABLwFcAUoBDwH/AVoBVAFDAb4BXgFVAT0BzgFcAUoBDwH/
        KAABXAFKAQ8B/wFcAUoBDwH/AVwBSgEPAf8DJQE3AwoBDgFcAUoBDwH/AVwBSgEPAf8BXAFKAQ8B/4gA
        AVcBUgFFAa4BXAFKAQ8B/wQAAVwBSgEPAf8BXAFKAQ8B/wFcAUoBDwH/AVYBUgFGAawBXAFKAQ8B/wFc
        AUoBDwH/AVwBSgEPAf8BXAFKAQ8B/wFcAUoBDwH/LAABXAFKAQ8B/wFcAUoBDwH/CAABXAFVATQB3AFc
        AUoBDwH/jAABVQFQAUYBqAFcAUoBDwH/BAABXAFKAQ8B/wFcAUoBDwH/AVwBSgEPAf8BXAFKAQ8B/wFc
        AUoBDwH/AVwBSgEPAf8BXAFKAQ8B/wFcAUoBDwH/AVwBSgEPAf8oAAFcAUoBDwH/AVwBSgEPAf8BXAFK
        AQ8B/wMKAQ0EAAFcAUoBDwH/AVwBSgEPAf8BXAFKAQ8B/4wAAVYBUgFFAbAEAAMRARcBWQFUAUMBuwFZ
        AVQBQwG7AVkBVAFDAbsBWQFUAUMBuwFZAVQBQwG7AVkBVAFDAbsBWQFUAUMBuwMiATIoAAFdAVABJQHt
        AV0BVAE4AdMBXAFKAQ8B/wFcAUoBDwH/AVwBSgEPAf8BXAFKAQ8B/wFdAVABJQHtAVwBSgEPAf/oAAFc
        AUoBDwH/AVwBSgEPAf8BXAFKAQ8B/wFcAUoBDwH/8AABOwE6ATkBYgMHAQoEAAFOAUwBRQGRiAABQgFN
        AT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEAAf8B+QHxAf8EAAH/AfwBgAE/BAAByAKA
        AT8EAAHIAfwBwAF/BAAByAEJAQ4BHwQAAcgBDwEOAR8EAAHIAQMBwAF/BAAByAGbAYABCwQAAcgBgwGA
        AQEEAAHIAYMB8QUAAcgBgwH/BQAByAEDAf8BmQQAAcgBAwH/AQgEAAHoAQMB/wUAA/8BwwQAA/8BywQA
        Cw==
</value>
  </data>
</root>