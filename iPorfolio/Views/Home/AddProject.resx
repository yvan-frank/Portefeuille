<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACU
        CAAAAk1TRnQBSQFMAgEBAgEAARgBAAEYAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEEYAAVsBSQEOAf8DFgEeFAADMgFQAVsBSQEOAf8BVgFUAU0BstwAAVsBSQEO
        Af8DEQEXBAADEQEXAVsBSQEOAf8BWgFWAU0BvQFYAUkBFAH9AVsBSQEOAf8BWwFJAQ4B/wM+AWsBWwFJ
        AQ4B/wM4AVygAAMhATABWwFJAQ4B/wQAAV4BTAERAf4BWwFJAQ4B/wFbAUkBDgH/BAABWwFJAQ4B/wFb
        AUkBDgH/AVsBSQEOAf8BWwFJAQ4B/wFbAUkBDgH/AVsBSQEOAf8BWwFJAQ4B/wQAAyUBNwFbAUkBDgH/
        AVsBSQEOAf8BWwFJAQ4B/wFbAUkBDgH/AVsBSQEOAf8BWwFJAQ4B/wFbAUkBDgH/AU4BTQFLAZagAAFV
        AVMBTAGuAVsBSQEOAf8EAAFbAUkBDgH/AVsBSQEOAf8BWwFJAQ4B/xgAAVsBSQEOAf8DHwEsCAABWwFJ
        AQ4B/wFbAUkBDgH/AVsBSQEOAf8DJQE3AV4BUQEhAfQBWwFJAQ4B/wFbAUkBDgH/pAABVQFTAUwBrgFb
        AUkBDgH/BAABWwFJAQ4B/wFbAUkBDgH/AVsBSQEOAf8BWwFJAQ4B/wFbAUkBDgH/AVsBSQEOAf8BWwFJ
        AQ4B/wQAAVsBSQEOAf8DHAEnBAABXgFMARcB+wFbAUkBDgH/AVsBSQEOAf8BWwFJAQ4B/wwAAVsBSQEO
        Af8BWwFJAQ4B/wFbAUkBDgH/AVsBSQEOAf+cAAFVAVMBTAGuAVsBSQEOAf8EAAFbAUkBDgH/AVsBSQEO
        Af8BWwFJAQ4B/wFbAUkBDgH/AVsBSQEOAf8BWwFJAQ4B/wFbAUkBDgH/EAABWwFJAQ4B/wFbAUkBDgH/
        AVsBSQEOAf8BWwFJAQ4B/wwAAVsBSQEOAf8BWwFJAQ4B/wFbAUkBDgH/AVsBSQEOAf+cAAFVAVMBTAGu
        AVsBSQEOAf8EAAFbAUkBDgH/AVsBSQEOAf8BWwFJAQ4B/wFbAUkBDgH/AVsBSQEOAf8BWwFJAQ4B/wFb
        AUkBDgH/AVsBSQEOAf8BWwFJAQ4B/xAAAVsBSQEOAf8BWwFJAQ4B/wFeAUkBGwH5AwMBBAFeAVYBQAHY
        AVsBSQEOAf8BWwFJAQ4B/6QAAVUBUwFMAa4BWwFJAQ4B/wQAAVsBSQEOAf8BWwFJAQ4B/wMWAR4EAAMZ
        ASMBWwFJAQ4B/wgAAVsBSQEOAf8MAAMKAQ4BWwFJAQ4B/wFbAUkBDgH/AVsBSQEOAf8BWwFJAQ4B/wFb
        AUkBDgH/AVsBSQEOAf8BWwFJAQ4B/wMzAVMDEQEXAwQBBQQAAjEBMAFNkAABVQFTAUwBrgFbAUkBDgH/
        BAABWwFJAQ4B/wFbAUkBDgH/AVsBSQEOAf8EAAFbAUkBDgH/AVsBSQEOAf8BWwFJAQ4B/wFbAUkBDgH/
        AVsBSQEOAf8MAAMeASsBWwFJAQ4B/wFbAVQBNgHkAVsBSQEOAf8BWwFJAQ4B/wFbAUkBDgH/AlEBTQGg
        AVsBSQEOAf8CRwFGAYEBWwFJAQ4B/wFbAUkBDgH/AV4BTAElAfMBWwFJAQ4B/wMAAQGMAAFVAVMBTAGu
        AVsBSQEOAf8EAAFbAUkBDgH/AVsBSQEOAf8DEwEaBAADHQEpAVsBSQEOAf8DDQERAxIBGQFbAUkBDgH/
        GAADNwFaAVsBSQEOAf8BWAFUAUwBvAQAAV0BVwFIAcoBUgFQAUwBpAFbAUkBDgH/AVsBSQEOAf8BWwFJ
        AQ4B/wFbAUkBDgH/AkkBRwGHAVwBTwEcAfiIAAFVAVMBTAGuAVsBSQEOAf8EAAFbAUkBDgH/AVsBSQEO
        Af8DGgEkBAADIAEvAVsBSQEOAf8BWQFWAU0BvgFeAVgBRwHOAVsBSQEOAf8oAAFbAUkBDgH/AVsBSQEO
        Af8BWwFJAQ4B/wMlATcDCgEOAVsBSQEOAf8BWwFJAQ4B/wFbAUkBDgH/iAABVQFTAUwBrgFbAUkBDgH/
        BAABWwFJAQ4B/wFbAUkBDgH/AVsBSQEOAf8BVAFTAU0BrAFbAUkBDgH/AVsBSQEOAf8BWwFJAQ4B/wFb
        AUkBDgH/AVsBSQEOAf8sAAFbAUkBDgH/AVsBSQEOAf8IAAFcAVYBPwHcAVsBSQEOAf+MAAFTAVIBTAGo
        AVsBSQEOAf8EAAFbAUkBDgH/AVsBSQEOAf8BWwFJAQ4B/wFbAUkBDgH/AVsBSQEOAf8BWwFJAQ4B/wFb
        AUkBDgH/AVsBSQEOAf8BWwFJAQ4B/ygAAVsBSQEOAf8BWwFJAQ4B/wFbAUkBDgH/AwoBDQQAAVsBSQEO
        Af8BWwFJAQ4B/wFbAUkBDgH/jAABVQFTAU0BsAQAAxEBFwFYAVYBSwG7AVgBVgFLAbsBWAFWAUsBuwFY
        AVYBSwG7AVgBVgFLAbsBWAFWAUsBuwFYAVYBSwG7AyIBMigAAV0BUQEsAe0BXQFXAUMB0wFbAUkBDgH/
        AVsBSQEOAf8BWwFJAQ4B/wFbAUkBDgH/AV0BUQEsAe0BWwFJAQ4B/+gAAVsBSQEOAf8BWwFJAQ4B/wFb
        AUkBDgH/AVsBSQEOAf/wAAM6AWIDBwEKBAABTQFMAUoBkYgAAUIBTQE+BwABPgMAASgDAAFAAwABEAMA
        AQEBAAEBBQABgBcAA/8BAAH/AfkB8QH/BAAB/wH8AYABPwQAAcgCgAE/BAAByAH8AcABfwQAAcgBCQEO
        AR8EAAHIAQ8BDgEfBAAByAEDAcABfwQAAcgBmwGAAQsEAAHIAYMBgAEBBAAByAGDAfEFAAHIAYMB/wUA
        AcgBAwH/AZkEAAHIAQMB/wEIBAAB6AEDAf8FAAP/AcMEAAP/AcsEAAs=
</value>
  </data>
</root>